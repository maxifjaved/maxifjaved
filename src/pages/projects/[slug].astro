---
import MainLayout from "../../layouts/MainLayout.astro";
import ProjectHeader from "../../components/ProjectHeader.astro";
import SocialShare from "../../components/SocialShare.astro";
import AuthorInfo from "../../components/AuthorInfo.astro";
import { projects } from "../../data/projects.ts";

// Generate static paths for all projects
export function getStaticPaths() {
  const paths = projects.map((project) => ({
    params: { slug: project.slug },
    props: {
      project: project,
      title: project.title,
      description: project.seo.seoDescription,
    },
  }));

  return paths;
}

// Get props from getStaticPaths
const { project, title, description } = Astro.props;
const {
  title: projectTitle,
  description: projectDescription,
  category,
  duration,
  role,
  images,
  keyFeatures,
  technicalImplementation,
  keyAchievements,
  impactResults,
} = project;

const currentUrl = new URL(Astro.url).toString();

// Create project content in HTML format similar to blog content
const projectInfoHtml = `
  <ul class="space-y-2 mb-6">
    <li><strong>Role:</strong> ${role}</li>
    <li><strong>Technologies:</strong> ${project.technologies.join(", ")}</li>
    <li><strong>Team Size:</strong> ${project.teamSize}</li>
    <li><strong>Industry:</strong> ${project.businessContext.industry}</li>
    <li><strong>User Base:</strong> ${project.businessContext.userBase}</li>
  </ul>
`;

const keyFeaturesHtml = keyFeatures
  .map(
    (feature) =>
      `<li class="flex items-start gap-3 text-gray-300">
    <span class="inline-block w-2 h-2 bg-cyber-blue rounded-full mt-2 flex-shrink-0 glow"></span>
    <span class="leading-relaxed">${feature}</span>
  </li>`,
  )
  .join("");

const keyAchievementsHtml = keyAchievements
  .map(
    (achievement) =>
      `<li class="flex items-start gap-3 text-gray-300">
    <span class="inline-block w-2 h-2 bg-cyber-blue/70 rounded-full mt-2 flex-shrink-0"></span>
    <span class="leading-relaxed">${achievement}</span>
  </li>`,
  )
  .join("");

const impactResultsHtml = impactResults
  .map(
    (result) =>
      `<li class="flex items-start gap-3 text-gray-300">
    <span class="inline-block w-2 h-2 bg-cyber-blue/50 rounded-full mt-2 flex-shrink-0"></span>
    <span class="leading-relaxed">${result}</span>
  </li>`,
  )
  .join("");

const metricsHtml = project.metrics
  .map(
    (metric) =>
      `<li class="flex items-start gap-3 text-gray-300">
    <span class="inline-block w-2 h-2 bg-cyber-blue rounded-full mt-2 flex-shrink-0 glow"></span>
    <span class="leading-relaxed"><span class="text-cyber-blue font-semibold">${metric.label}:</span> ${metric.value}${metric.description ? ` - ${metric.description}` : ""}</span>
  </li>`,
  )
  .join("");

const seoKeywordsHtml =
  project.seo?.keywords
    ?.map(
      (keyword) =>
        `<span class="px-3 py-1 bg-cyber-blue/10 text-cyber-blue rounded-full text-sm border border-cyber-blue/20">${keyword}</span>`,
    )
    .join(" ") || "";

const tagsHtml =
  project.tags
    ?.map(
      (tag) =>
        `<span class="px-3 py-1 bg-cyber-blue/10 text-cyber-blue rounded-full text-sm border border-cyber-blue/20">#${tag}</span>`,
    )
    .join(" ") || "";

const projectContent = `
  ${projectInfoHtml}

  <div class="project-overview mb-8">
    <h2 class="text-2xl font-bold text-cyber-blue mb-4 text-shadow-glow">Overview</h2>
    <p class="text-lg leading-relaxed text-gray-300">${projectDescription}</p>
  </div>

  <div class="project-section mb-8">
    <h2 class="text-2xl font-bold text-cyber-blue mb-4 text-shadow-glow">Key Responsibilities & Achievements</h2>
    <ul class="space-y-4 pl-2">
      ${keyAchievementsHtml}
    </ul>
  </div>

  <div class="project-section mb-8">
    <h2 class="text-2xl font-bold text-cyber-blue mb-4 text-shadow-glow">Technical Implementation</h2>
    <div class="border border-cyber-blue/10 bg-cyber-dark/30 rounded-lg p-4">
      <p class="leading-relaxed text-gray-300">${technicalImplementation}</p>
    </div>
  </div>

  <div class="project-section mb-8">
    <h2 class="text-2xl font-bold text-cyber-blue mb-4 text-shadow-glow">Impact & Results</h2>
    <ul class="space-y-4 pl-2">
      ${impactResultsHtml}
    </ul>
  </div>

  <div class="project-section mb-8">
    <h2 class="text-2xl font-bold text-cyber-blue mb-4 text-shadow-glow">Key Features Delivered</h2>
    <ul class="space-y-4 pl-2">
      ${keyFeaturesHtml}
    </ul>
  </div>

  ${
    project.metrics && project.metrics.length > 0
      ? `
  <div class="project-section mb-8">
    <h2 class="text-2xl font-bold text-cyber-blue mb-4 text-shadow-glow">Key Metrics</h2>
    <ul class="space-y-4 pl-2">
      ${metricsHtml}
    </ul>
  </div>
  `
      : ""
  }

  ${
    seoKeywordsHtml
      ? `
  <div class="project-section mb-8">
    <h2 class="text-2xl font-bold text-cyber-blue mb-4 text-shadow-glow">Related Keywords</h2>
    <div class="flex flex-wrap gap-2 p-2">
      ${seoKeywordsHtml}
    </div>
  </div>
  `
      : ""
  }

  ${
    tagsHtml
      ? `
  <div class="project-section">
    <h2 class="text-2xl font-bold text-cyber-blue mb-4 text-shadow-glow">Project Tags</h2>
    <div class="flex flex-wrap gap-2 p-2">
      ${tagsHtml}
    </div>
  </div>
  `
      : ""
  }
`;

// Author info similar to blog posts
const author = {
  name: "Muhammad Asif Javed",
  title: "Full-Stack Developer",
  bio: "Experienced full-stack developer specializing in modern web technologies, real-time applications, and scalable solutions.",
  avatar: "/profile-image.jpg",
};

// Project Schema for SEO
const projectSchema = {
  "@context": "https://schema.org",
  "@type": "CreativeWork",
  "name": projectTitle,
  "description": projectDescription,
  "creator": {
    "@type": "Person",
    "name": "Muhammad Asif Javed",
    "jobTitle": "Full-Stack Developer",
    "url": "https://maxifjaved.com"
  },
  "dateCreated": project.startDate,
  "datePublished": project.endDate,
  "keywords": project.tags?.join(", "),
  "inLanguage": "en",
  "url": currentUrl,
  "image": project.images.featuredImage,
  "genre": project.category,
  "about": project.businessContext.industry,
  "workExample": {
    "@type": "WebApplication",
    "name": projectTitle,
    "description": projectDescription,
    "applicationCategory": project.category,
    "operatingSystem": "Web",
    "programmingLanguage": project.technologies
  }
};
---

<MainLayout
  title={`${title} | Muhammad Asif Javed Portfolio`}
  description={description}
>
  <!-- Project Schema -->
  <script type="application/ld+json" set:html={JSON.stringify(projectSchema)}></script>
  
  <ProjectHeader title={projectTitle} image={images.featuredImage} />

  <!-- Project Content (using same structure as ArticleContent) -->
  <section id="project-content" class="relative mb-6">
    <div class="mx-auto max-w-4xl px-6">
      <div
        class="rounded-xl border border-cyber-blue/20 bg-cyber-dark/70 p-6 text-left backdrop-blur-sm"
      >
        <div class="post-content" set:html={projectContent} />
      </div>
    </div>
  </section>

  <!-- <SocialShare title={projectTitle} url={currentUrl} /> -->
  <AuthorInfo author={author} />
</MainLayout>
