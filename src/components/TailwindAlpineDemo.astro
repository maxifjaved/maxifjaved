---
export interface Props {
  title?: string;
}

const { title = "Tailwind CSS v4 + Alpine.js Demo" } = Astro.props;
---

<div class="my-8 p-6 bg-gray-100 rounded-lg">
  <h3 class="text-2xl font-bold mb-4 text-gray-800">{title}</h3>
  
  <!-- Alpine.js interactive counter -->
  <div x-data="{ count: 0 }" class="mb-6">
    <p class="mb-4 text-lg">
      Counter: <span x-text="count" class="font-bold text-blue-600"></span>
    </p>
    <div class="flex gap-2">
      <button 
        @click="count++" 
        class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"
      >
        Increment
      </button>
      <button 
        @click="count--" 
        class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors"
      >
        Decrement
      </button>
      <button 
        @click="count = 0" 
        class="px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors"
      >
        Reset
      </button>
    </div>
  </div>
  
  <!-- Alpine.js toggle example -->
  <div x-data="{ open: false }" class="mb-6">
    <button 
      @click="open = !open" 
      class="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors"
    >
      Toggle Content
    </button>
    <div 
      x-show="open" 
      x-transition
      class="mt-4 p-4 bg-white rounded shadow"
    >
      <p class="text-gray-700">
        This content is toggled with Alpine.js! The animations are handled by Alpine's x-transition directive.
      </p>
    </div>
  </div>
  
  <!-- Tailwind CSS v4 gradient example -->
  <div class="p-4 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded">
    <p class="font-semibold">Tailwind CSS v4 Gradient</p>
    <p class="text-sm">This gradient uses Tailwind's utility classes</p>
  </div>
</div>