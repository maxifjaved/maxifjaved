---
import BlogCard from "../components/BlogCard.astro";
import BlogPagination from "../components/BlogPagination.astro";
import BlogSearch from "../components/BlogSearch.astro";
import type { BlogItem } from '../data/blogItems';

export interface Props {
  posts?: BlogItem[];
  currentPage?: number;
  totalPages?: number;
  categories?: string[];
  selectedCategory?: string | null;
  searchQuery?: string;
}

export interface BlogType {
  title: string;
  posts: {
    image: { src: string; alt: string };
    date: string;
    category: string;
    title: string;
    excerpt: string;
    link: string;
    delay: string;
  }[];
}

const { 
  posts = [], 
  currentPage = 1, 
  totalPages = 1, 
  categories = [], 
  selectedCategory = null,
  searchQuery = ''
} = Astro.props;

// Map blog posts to BlogType
const blogData: BlogType = {
  title: selectedCategory ? `${selectedCategory} Articles` : "Latest Articles",
  posts: posts.map((post, index) => ({
    image: { src: post.featuredImage, alt: post.title },
    date: new Date(post.date).toLocaleDateString("en-US", { year: "numeric", month: "long", day: "numeric" }),
    category: post.category,
    title: post.title,
    excerpt: post.subtitle,
    link: `/blogs/${post.slug}`,
    delay: `${100 * (index + 1)}`,
  })),
};
---

<section
    id="blog-posts"
    class="pb-16 lg:pb-24 pt-32 lg:pt-40 relative overflow-hidden"
  >
    <div
      class="absolute top-0 left-0 w-full h-64 bg-gradient-to-b from-cyber-dark to-transparent"
    ></div>
    <div
      class="absolute bottom-0 left-0 w-full h-64 bg-gradient-to-t from-cyber-dark to-transparent"
    ></div>

    <div class="max-w-7xl mx-auto px-6 relative">
      <div class="flex justify-center mb-16">
        <div class="relative">
          <h2 class="text-4xl md:text-5xl font-bold text-center">
            {blogData.title.split(" ")[0]}{" "}
            <span class="text-cyber-blue text-shadow-glow">
              {blogData.title.split(" ")[1]}
            </span>
          </h2>
          <div class="h-1 w-32 bg-cyber-blue mt-4 mx-auto rounded-full glow"></div>
        </div>
      </div>

      <!-- Search -->
      <BlogSearch searchQuery={searchQuery} selectedCategory={selectedCategory} />

      <!-- Category Filter -->
      {categories.length > 0 && (
        <div class="flex flex-wrap justify-center gap-4 mb-12">
          <a 
            href={`/blogs${searchQuery ? `?search=${encodeURIComponent(searchQuery)}` : ''}`}
            class={`px-4 py-2 rounded-full border transition-all duration-300 ${
              !selectedCategory 
                ? 'bg-cyber-blue text-white border-cyber-blue' 
                : 'border-gray-600 text-gray-300 hover:border-cyber-blue hover:text-cyber-blue'
            }`}
          >
            All
          </a>
          {categories.map((category) => (
            <a 
              href={`/blogs?category=${encodeURIComponent(category.toLowerCase())}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`}
              class={`px-4 py-2 rounded-full border transition-all duration-300 ${
                selectedCategory?.toLowerCase() === category.toLowerCase()
                  ? 'bg-cyber-blue text-white border-cyber-blue' 
                  : 'border-gray-600 text-gray-300 hover:border-cyber-blue hover:text-cyber-blue'
              }`}
            >
              {category}
            </a>
          ))}
        </div>
      )}

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {blogData.posts.map((post) => (
          <BlogCard blog={post} />
        ))}
      </div>

      <!-- Pagination -->
      {totalPages > 1 && (
        <div class="flex justify-center mt-16">
          <div class="flex gap-2">
            {currentPage > 1 && (
              <a 
                href={`/blogs?page=${currentPage - 1}${selectedCategory ? `&category=${encodeURIComponent(selectedCategory)}` : ''}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`}
                class="px-4 py-2 bg-gray-800 text-white rounded hover:bg-cyber-blue transition-colors"
              >
                Previous
              </a>
            )}
            
            {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
              <a 
                href={`/blogs?page=${page}${selectedCategory ? `&category=${encodeURIComponent(selectedCategory)}` : ''}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`}
                class={`px-4 py-2 rounded transition-colors ${
                  page === currentPage 
                    ? 'bg-cyber-blue text-white' 
                    : 'bg-gray-800 text-white hover:bg-cyber-blue'
                }`}
              >
                {page}
              </a>
            ))}
            
            {currentPage < totalPages && (
              <a 
                href={`/blogs?page=${currentPage + 1}${selectedCategory ? `&category=${encodeURIComponent(selectedCategory)}` : ''}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`}
                class="px-4 py-2 bg-gray-800 text-white rounded hover:bg-cyber-blue transition-colors"
              >
                Next
              </a>
            )}
          </div>
        </div>
      )}
    </div>
  </section>