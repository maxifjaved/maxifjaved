---
import MarkdownIt from "markdown-it";

interface Props {
  summary: string;
}

const { summary } = Astro.props;

if (!summary) {
  return null;
}

const md = new MarkdownIt();
const htmlContent = md.render(summary);
---

<section id="summary-section" class="relative mb-8">
  <div class="mx-auto max-w-4xl px-6">
    <div
      class="rounded-xl border border-cyber-blue/20 bg-cyber-dark/70 backdrop-blur-sm relative overflow-hidden"
    >
      <!-- Glow effect -->
      <div class="absolute inset-0 bg-gradient-to-br from-cyber-blue/5 to-transparent pointer-events-none"></div>

      <div class="relative p-6">
        <div class="flex items-start gap-3 mb-4">
          <svg
            class="w-6 h-6 text-cyber-blue flex-shrink-0 mt-1"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
            ></path>
          </svg>
          <h2 class="text-xl font-bold text-cyber-blue text-shadow-glow">Quick Summary</h2>
        </div>
        <div
          class="summary-content"
          set:html={htmlContent}
        />
      </div>
    </div>
  </div>
</section>

<style>
  .summary-content :global(ul) {
    list-style-type: disc;
    list-style-position: inside;
    color: #e5e7eb;
  }
  .summary-content :global(li) {
    line-height: 1.625;
  }
  .summary-content :global(strong) {
    color: #ffffff;
    font-weight: 600;
  }
  .summary-content :global(p) {
    margin-bottom: 0.75rem;
    line-height: 1.625;
    color: #e5e7eb;
  }
</style>
