---
import MarkdownIt from "markdown-it";

interface Props {
  summary: string;
}

const { summary } = Astro.props;

if (!summary) {
  return null;
}

const md = new MarkdownIt();
const htmlContent = md.render(summary);
---

<section id="summary-section" class="relative mb-8">
  <div class="mx-auto max-w-4xl px-6">
    <div
      class="rounded-xl border-2 border-cyber-blue/40 bg-gradient-to-br from-cyber-blue/10 to-purple-900/10 p-6 backdrop-blur-sm shadow-lg shadow-cyber-blue/20"
    >
      <div class="flex items-start gap-3 mb-3">
        <svg
          class="w-6 h-6 text-cyber-blue flex-shrink-0 mt-1"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
          ></path>
        </svg>
        <h2 class="text-xl font-bold text-cyber-blue">Quick Summary</h2>
      </div>
      <div
        class="summary-content prose prose-invert prose-cyan max-w-none"
        set:html={htmlContent}
      />
    </div>
  </div>
</section>

<style>
  .summary-content :global(ul) {
    list-style-type: disc;
    list-style-position: inside;
    color: #e5e7eb;
  }
  .summary-content :global(li) {
    line-height: 1.625;
  }
  .summary-content :global(strong) {
    color: #ffffff;
    font-weight: 600;
  }
  .summary-content :global(p) {
    margin-bottom: 0.75rem;
    line-height: 1.625;
    color: #e5e7eb;
  }
</style>
